name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  NODE_VERSION: '18'

jobs:
  test-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Run client tests
        run: cd client && npm test

      - name: Build client
        run: cd client && npm run build

      - name: Upload client build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist/
          retention-days: 1

  test-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        run: cd server && npm ci

      - name: Run server tests
        run: cd server && npm test

      - name: Server build
        run: cd server && npm run build

  trigger-cd:
    runs-on: ubuntu-latest
    needs: [test-client, test-server]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Trigger CD Pipeline
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'cd.yml',
              ref: context.ref,
              inputs: {
                environment: 'staging',
                version: context.sha
              }
            });

      - name: CI Success Notification
        run: |
          echo "ðŸŽ‰ CI Pipeline completed successfully!"
          echo "âœ… Client and Server tests passed"
          echo "ðŸš€ CD Pipeline triggered"
